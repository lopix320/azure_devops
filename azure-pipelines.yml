trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

stages:
  - stage: Build
    displayName: 'Build Stage'
    jobs:
      - job: BuildJob
        displayName: 'Build Job'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '18.x'
            displayName: 'Set up Node.js'
          
          - script: |
              npm install
              npm run build
            displayName: 'Install Dependencies and Build'

  - stage: Test
    displayName: 'Test Stage'
    dependsOn: Build
    jobs:
      - job: TestJob
        displayName: 'Test Job'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '18.x'
            displayName: 'Set up Node.js'
          
          - script: |
              npm install
              npm test
            displayName: 'Run Tests'

  - stage: Deploy
    displayName: 'Deploy Stage'
    dependsOn: Test
    condition: succeeded() # Executa apenas se os testes passarem
    jobs:
      - deployment: DeployJob
        displayName: 'Deploy to Azure Static Web App'
        environment: 'production'
        pool:
          vmImage: 'ubuntu-latest'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureStaticWebApp@0
                  inputs:
                    app_location: '/' # Caminho do c칩digo-fonte do app
                    api_location: ''   # Caminho do c칩digo-fonte da API (se houver)
                    output_location: '.' # Diret칩rio da build
                    azure_static_web_apps_api_token: '$(AZURE_STATIC_WEB_APPS_API_TOKEN)' # Vari치vel secreta
